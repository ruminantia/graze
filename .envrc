# Grazer component environment configuration for direnv
# This file is automatically loaded when entering the grazer directory

# Check if virtual environment exists
if [ -d "venv" ]; then
    # Activate the virtual environment
    source venv/bin/activate

    # Set component-specific environment variables
    export GRZ_LOG_LEVEL=${GRZ_LOG_LEVEL:-"INFO"}
    export GRZ_MAX_POSTS=${GRZ_MAX_POSTS:-"10"}
    export GRZ_OUTPUT_DIR=${GRZ_OUTPUT_DIR:-"./output"}

    # Load environment secrets from .env file if it exists
    if [ -f .env ]; then
        set -a
        source .env
        set +a
    fi

    # Add project-specific Python path
    export PYTHONPATH="$(pwd)/src:$PYTHONPATH"

    echo "🐮 Grazer environment activated"
    echo "   Python: $(which python)"
    echo "   Log level: $GRZ_LOG_LEVEL"
    echo "   Max posts: $GRZ_MAX_POSTS"
    echo "   Output dir: $GRZ_OUTPUT_DIR"
else
    echo "⚠️  Warning: Virtual environment not found in grazer/venv"
    echo "   Run './scripts/setup_environments.sh' to create it"
fi

# Cleanup function when leaving directory
on_exit() {
    if [ -d "venv" ]; then
        deactivate 2>/dev/null || true
        echo "🐮 Grazer environment deactivated"
    fi
}
